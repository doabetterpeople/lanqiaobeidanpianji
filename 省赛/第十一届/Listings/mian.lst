C51 COMPILER V9.59.0.0   MIAN                                                              03/25/2022 20:50:40 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE MIAN
OBJECT MODULE PLACED IN .\Objects\mian.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE mian.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\mian
                    -.lst) TABS(2) OBJECT(.\Objects\mian.obj)

line level    source

   1          #include <STC15F2K60S2.H>
   2          #include "iic.h"
   3          sbit R1 = P3^2;
   4          sbit R2 = P3^3;
   5          sbit C1 = P3^4;
   6          sbit C2 = P3^5;
   7          sbit L1 = P0^0;
   8          sbit L2 = P0^1;
   9          sbit L3 = P0^2;
  10          
  11          int dat_adc;
  12          unsigned char Display_num = 1;
  13          float setting_num=0;
  14          unsigned char num=0;
  15          unsigned led_temp;
  16          unsigned int count;
  17          unsigned char wrong=0;
  18          unsigned char code NixieTable[]={0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,
  19                                      0x80,0x90,0x88,0x83,0xc6,0xa1,0x86,0x8e,
  20                                      0xbf,0x7f};
  21          unsigned char code NixieTableDot[]={0x40,0x79,0x24,0x30,0x19,0x12,0x02,0x78,0x00,0x10};
  22          
  23          
  24          
  25          void Delay(unsigned int t)
  26          {
  27   1        while(t--);
  28   1      }
  29          
  30          void HC138_init(unsigned char channel)
  31          {
  32   1        switch(channel)
  33   1        {
  34   2          case 4: P2 = (P2&0x1f) | 0x80; break;
  35   2          case 5: P2 = (P2&0x1f) | 0xa0; break;
  36   2          case 6: P2 = (P2&0x1f) | 0xc0; break;
  37   2          case 7: P2 = (P2&0x1f) | 0xe0; break;
  38   2        }
  39   1      }
  40          
  41          void Nixie_Display(unsigned char pose,unsigned char dat)
  42          {
  43   1        HC138_init(6);
  44   1        P0 = 0x01 <<pose;
  45   1        HC138_init(7);
  46   1        P0 = dat;
  47   1      }
  48          
  49          float ADC_read()
  50          {
  51   1        float temp;
  52   1        IIC_Start();
  53   1        IIC_SendByte(0x90);
  54   1        IIC_WaitAck();
C51 COMPILER V9.59.0.0   MIAN                                                              03/25/2022 20:50:40 PAGE 2   

  55   1        IIC_SendByte(0x43);
  56   1        IIC_WaitAck();
  57   1        IIC_Stop();
  58   1        
  59   1        IIC_Start();
  60   1        IIC_SendByte(0x91);
  61   1        IIC_WaitAck();
  62   1        temp = IIC_RecByte();
  63   1        IIC_WaitAck();
  64   1        IIC_SendAck(0);
  65   1        IIC_Stop();
  66   1        return temp;
  67   1      } 
  68          
  69          void ADC_change()
  70          {
  71   1        float x;
  72   1        x = ADC_read();
  73   1        dat_adc = x*1.961;
  74   1      
  75   1      }
  76          void ADC_Display()
  77          {
  78   1        Nixie_Display(0,0xc1);
  79   1        Delay(200);
  80   1        Nixie_Display(1,0xff);
  81   1        Delay(200);
  82   1        Nixie_Display(2,0xff);
  83   1        Delay(200);
  84   1        Nixie_Display(3,0xff);
  85   1        Delay(200);
  86   1        Nixie_Display(4,0xff);
  87   1        Delay(200);
  88   1        Nixie_Display(5,NixieTableDot[dat_adc/100]);
  89   1        Delay(200);
  90   1        Nixie_Display(6,NixieTable[dat_adc/10%10]);
  91   1        Delay(200);
  92   1        Nixie_Display(7,NixieTable[dat_adc%10]);
  93   1        Delay(200);
  94   1        
  95   1        HC138_init(6);
  96   1        P0 = 0xff;
  97   1        HC138_init(7);
  98   1        P0 = 0xff;
  99   1      }
 100          
 101          void Setting_Display()
 102          {
 103   1        unsigned int gg;
 104   1        gg = setting_num*100;
 105   1        Nixie_Display(0,0x8c);
 106   1        Delay(200);
 107   1        Nixie_Display(1,0xff);
 108   1        Delay(200);
 109   1        Nixie_Display(2,0xff);
 110   1        Delay(200);
 111   1        Nixie_Display(3,0xff);
 112   1        Delay(200);
 113   1        Nixie_Display(4,0xff);
 114   1        Delay(200);
 115   1        Nixie_Display(5,NixieTableDot[gg/100]);
 116   1        Delay(200);
C51 COMPILER V9.59.0.0   MIAN                                                              03/25/2022 20:50:40 PAGE 3   

 117   1        Nixie_Display(6,NixieTable[gg/10%10]);
 118   1        Delay(200);
 119   1        Nixie_Display(7,NixieTable[gg%10]);
 120   1        Delay(200);
 121   1        
 122   1        HC138_init(6);
 123   1        P0 = 0xff;
 124   1        HC138_init(7);
 125   1        P0 = 0xff;
 126   1      }
 127          void Num_Display()
 128          {
 129   1        Nixie_Display(0,0xc8);
 130   1        Delay(200);
 131   1        Nixie_Display(1,0xff);
 132   1        Delay(200);
 133   1        Nixie_Display(2,0xff);
 134   1        Delay(200);
 135   1        Nixie_Display(3,0xff);
 136   1        Delay(200);
 137   1        Nixie_Display(4,0xff);
 138   1        Delay(200);
 139   1        Nixie_Display(5,0xff);
 140   1        Delay(200);
 141   1        Nixie_Display(6,NixieTable[num/10]);
 142   1        Delay(200);
 143   1        Nixie_Display(7,NixieTable[num%10]);
 144   1        Delay(200);
 145   1        
 146   1        HC138_init(6);
 147   1        P0 = 0xff;
 148   1        HC138_init(7);
 149   1        P0 = 0xff;
 150   1      }
 151          void AT24C02_Write(unsigned char date)
 152          {
 153   1        float cc;
 154   1        cc = setting_num;
 155   1        IIC_Start();
 156   1        IIC_SendByte(0xA0);
 157   1        IIC_WaitAck();
 158   1        IIC_SendByte(date);
 159   1        IIC_WaitAck();
 160   1        IIC_SendByte(cc*10);
 161   1        IIC_WaitAck();
 162   1        IIC_Stop();
 163   1      }
 164          float AT24C02_Read(unsigned char date)
 165          {
 166   1        unsigned int temp;
 167   1        IIC_Start();
 168   1        IIC_SendByte(0xA0);
 169   1        IIC_WaitAck();
 170   1        IIC_SendByte(date);
 171   1        IIC_WaitAck();
 172   1        
 173   1        IIC_Start();
 174   1        IIC_SendByte(0xA1);
 175   1        IIC_WaitAck();
 176   1        temp = IIC_RecByte();
 177   1        IIC_SendAck(0);
 178   1        IIC_Stop();
C51 COMPILER V9.59.0.0   MIAN                                                              03/25/2022 20:50:40 PAGE 4   

 179   1        return temp;
 180   1      }
 181          void Display_max()
 182          {
 183   1        ADC_change();
 184   1        switch(Display_num)
 185   1        {
 186   2          case 1: 
 187   2            ADC_Display();
 188   2          break;
 189   2          case 2:
 190   2            Setting_Display();
 191   2          break;
 192   2          case 3:
 193   2            AT24C02_Write(0x00);
 194   2            Num_Display();
 195   2          break;
 196   2        }
 197   1      }
 198          
 199          unsigned char flag;
 200          
 201          void Num_Run()
 202          {
 203   1        unsigned int gg;
 204   1        gg = setting_num*100;
 205   1         if(dat_adc>gg)
 206   1         {
 207   2          flag=1;
 208   2          TR1=0;
 209   2          count=0;
 210   2          led_temp=2;
 211   2         }
 212   1         else if(dat_adc<gg)
 213   1         {
 214   2          flag=2;
 215   2          TR0=1;
 216   2         }
 217   1         if(dat_adc==gg)
 218   1         {
 219   2          if(flag==1)
 220   2          {
 221   3            num++;
 222   3            flag=2;
 223   3          }
 224   2         }
 225   1      }
 226          
 227          void key_Scan()         //°´¼üÉ¨Ãè
 228          {
 229   1        R1 = 0;
 230   1        C1 = C2 = R2 = 1; 
 231   1        if((C1==0)&&(Display_num==2))      //S17 
 232   1        {
 233   2          Delay(50);
 234   2          if(C1==0)
 235   2          {
 236   3            wrong=0;
 237   3            setting_num=setting_num-0.5;
 238   3            if(setting_num<0)
 239   3            {
 240   4              setting_num=5;
C51 COMPILER V9.59.0.0   MIAN                                                              03/25/2022 20:50:40 PAGE 5   

 241   4            }
 242   3            while(C1==0)
 243   3            {
 244   4              Display_max();
 245   4            }
 246   3          }
 247   2        }
 248   1        if(((C1==0)&&(Display_num==1))||(C1==0)&&(Display_num==3))
 249   1        {
 250   2          while(C1==0)
 251   2          {
 252   3            Display_max();
 253   3          }
 254   2          wrong++;
 255   2        }
 256   1        if((C2==0)&&(Display_num==3))  //S13
 257   1        {
 258   2          Delay(50);
 259   2          if(C2==0)
 260   2          {
 261   3            wrong=0;
 262   3            while(C2==0)
 263   3            {
 264   4              Display_max();
 265   4            }
 266   3            num=0;
 267   3          }
 268   2        }
 269   1        if(((C2==0)&&(Display_num==1))||((C2==0)&&(Display_num==2)))
 270   1        {
 271   2          while(C2==0)
 272   2          {
 273   3            Display_max();
 274   3          }
 275   2          wrong++;
 276   2        }
 277   1        R2 = 0;
 278   1        C1 = C2 = R1 = 1; 
 279   1        if((C1==0)&&(Display_num==2))   //S16
 280   1        {
 281   2          Delay(50);
 282   2          if(C1==0)
 283   2          {
 284   3            wrong=0;
 285   3            setting_num=setting_num+0.5;
 286   3            if(setting_num>5)
 287   3            {
 288   4              setting_num=0;
 289   4            }
 290   3            while(C1==0)
 291   3            {
 292   4              Display_max();
 293   4            }
 294   3          }
 295   2        }
 296   1        if(((C1==0)&&(Display_num==1))||(C1==0)&&(Display_num==3))
 297   1        {
 298   2          while(C1==0)
 299   2          {
 300   3            Display_max();
 301   3          }
 302   2          wrong++;
C51 COMPILER V9.59.0.0   MIAN                                                              03/25/2022 20:50:40 PAGE 6   

 303   2        }
 304   1        if(C2==0)   //S12
 305   1        {
 306   2          Delay(50);
 307   2          if(C2==0)
 308   2          {
 309   3            wrong=0;
 310   3            while(C2==0)
 311   3            {
 312   4              Display_max();
 313   4            }
 314   3            Display_num++;
 315   3            if(Display_num==4)
 316   3            {
 317   4              Display_num=1;
 318   4            }
 319   3          }
 320   2        }
 321   1      }
 322          void Timer0_init()
 323          {
 324   1        TMOD = 0x01;
 325   1        TL0 = (65536-50000)%256;
 326   1        TH0 = (65536-50000)/256;
 327   1        
 328   1        ET0 = 1;
 329   1        EA = 1; 
 330   1      }
 331          
 332          void Timer0_Service() interrupt 1
 333          {
 334   1        
 335   1        TL0 = (65536-50000)%256;
 336   1        TH0 = (65536-50000)/256;
 337   1        count++;
 338   1        if(count==100)
 339   1        {
 340   2          count=0;
 341   2          led_temp=1;
 342   2        }
 343   1      }
 344          void LED_scan()
 345          {
 346   1        if(led_temp==1)
 347   1        {
 348   2        HC138_init(4);
 349   2        L1 = 0;
 350   2        }
 351   1        else if(led_temp==2)
 352   1        {
 353   2        HC138_init(4);
 354   2        L1 = 1;
 355   2        }
 356   1        if(num%2==1)
 357   1        {
 358   2        HC138_init(4);
 359   2        L2 = 0;
 360   2        }
 361   1        else if(num%2==0)
 362   1        {
 363   2        HC138_init(4);
 364   2        L2 = 1;
C51 COMPILER V9.59.0.0   MIAN                                                              03/25/2022 20:50:40 PAGE 7   

 365   2        }
 366   1        if(wrong>=3)
 367   1        {
 368   2          L3 = 0;
 369   2        }
 370   1        else {L3 = 1;}
 371   1      }
 372          void System_Init()
 373          {
 374   1        HC138_init(4);
 375   1        P0 = 0xff;
 376   1        HC138_init(5);
 377   1        P0 = 0x00;
 378   1      }
 379          void main()
 380          {
 381   1        System_Init();
 382   1        Timer0_init();
 383   1        setting_num = AT24C02_Read(0x00);
 384   1        setting_num /= 10;
 385   1        while(1)
 386   1        {
 387   2          key_Scan();
 388   2          Display_max();
 389   2          Num_Run();
 390   2          LED_scan();
 391   2        }
 392   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1308    ----
   CONSTANT SIZE    =     28    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     14      16
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
